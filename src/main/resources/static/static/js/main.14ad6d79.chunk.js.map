{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","summary","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14ad6d79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;","export const GET_ERRORS = \"GET_ERRORS\"\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\nexport const GET_PROJECT =\"GET_PROJECT\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\n\r\n//Types for Bakclog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\"\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\"\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\"\r\nexport const SET_CURRENT_USER= \"SET_CURRENT_USER\"\r\n","import axios from \"axios\"\r\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\"\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"https://pmtspring.herokuapp.com/api/project\",project)\r\n        history.push(\"/dashboard\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) { \r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"https://pmtspring.herokuapp.com/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id,history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`https://pmtspring.herokuapp.com/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        }) \r\n    } catch (error) {\r\n        history.push(\"/dashoboard\")\r\n    }\r\n}\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if(\r\n        window.confirm(\r\n            \"Are you sure? This will delete the project and all the data related to it\"\r\n            )){\r\n                await axios.delete(`https://pmtspring.herokuapp.com/api/project/${id}`)\r\n    dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n    })\r\n}\r\n}","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport {deleteProject} from \"../../actions/projectActions\"\r\n\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id)\r\n    }\r\n    render() {\r\n        const{project}=this.props\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"card card-body bg-light mb-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                        <h3>{project.projectName}</h3>\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 d-none d-lg-block\">\r\n                        <ul className=\"list-group\">\r\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item board\">\r\n                                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item update\">\r\n                                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                </li>\r\n                            </Link>\r\n                                <li className=\"list-group-item delete\" \r\n                                onClick={this.onDeleteClick.bind(this,project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes={\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {deleteProject}\r\n    )(ProjectItem);\r\n","import React, { Component } from 'react'\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem'\r\nimport {connect} from \"react-redux\"\r\nimport {getProjects} from \"../actions/projectActions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Dashboard extends Component {\r\n\r\n    //life cycle hook\r\n    componentDidMount(){\r\n        this.props.getProjects()\r\n    }\r\n\r\n    render() {\r\n        const {projects} = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"display-4 text-center\">Projects</h1>\r\n                    <br />\r\n                    <CreateProjectButton />\r\n                    <br />\r\n                    <hr />\r\n                    {projects.map(project=> (\r\n                        <ProjectItem key={project.id} project={project} />\r\n                    ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes={\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project:state.project\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProjects})(Dashboard)","import axios from 'axios'\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"]=token\r\n    }else{\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n\r\n    }\r\n}\r\n\r\nexport default setJWTToken","import axios from \"axios\"\r\nimport setJWTToken from \"../securityUtils/setJWTToken\"\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\"\r\nimport  jwt_decode  from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post (\"https://pmtspring.herokuapp.com/api/users/register\", newUser)\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }) \r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        //post login request\r\n        const res = await axios.post (\"https://pmtspring.herokuapp.com/api/users/login\", LoginRequest)\r\n        //extract token from res.data\r\n        const{token} = res.data\r\n        //store token in localstorage\r\n        localStorage.setItem(\"jwtToken\",token)\r\n        //set token in header\r\n        setJWTToken(token)\r\n        //decode token on react\r\n        const decoded = jwt_decode(token)\r\n        //dispatch to securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }) \r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n\r\n    logout(){\r\n        this.props.logout()\r\n        window.location.href=\"/\"\r\n    }\r\n    render() {\r\n        const {validToken, user} = this.props.security\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n                </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        <i className=\"fas fa-user-circle mr-1\" />\r\n                        {user.fullName}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/logout\"\r\n                    onClick={this.logout.bind(this)}>\r\n                        Logout\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        )\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/register\">\r\n                        Sign up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        )\r\n\r\n        let headerLinks\r\n\r\n        if(validToken && user){\r\n            headerLinks = userIsAuthenticated\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    Personal Project Management Tool\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                {headerLinks}\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst MapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default  connect(MapStateToProps,{logout})(Header);","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from\"react-redux\"\r\nimport {createProject} from \"../../actions/projectActions\"\r\nimport classnames from \"classnames\"\r\n\r\nclass AddProject extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    //life cycle hooks\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors}\r\n                )\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier:this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n        this.props.createProject(newProject, this.props.history)\r\n\r\n    }\r\n    render() {\r\n        const {errors}= this.state\r\n\r\n        return (\r\n            <div>\r\n\r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Create  Project form</h5>\r\n                        <hr />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg \",{\r\n                                    \"is-invalid\": errors.projectName\r\n                                })}\r\n                                placeholder=\"Project Name\" name=\"projectName\" \r\n                                value={this.state.projectName} onChange={this.onChange}/>\r\n                                {errors.projectName && (\r\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg \",{\r\n                                    \"is-invalid\": errors.projectIdentifier\r\n                                })}\r\n                                placeholder=\"Unique Project ID\" name=\"projectIdentifier\" \r\n                                value={this.state.projectIdentifier} onChange={this.onChange}/>\r\n                                {errors.projectIdentifier && (\r\n                                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea \r\n                                className={classnames(\"form-control form-control-lg \",{\r\n                                    \"is-invalid\": errors.description\r\n                                })}\r\n                                placeholder=\"Project Description\" name=\"description\" \r\n                                value={this.state.description} onChange={this.onChange}></textarea>\r\n                                {errors.description && (\r\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                )}\r\n                            </div>\r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"start_date\"  \r\n                                value={this.state.start_date} onChange={this.onChange}/>\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"end_date\" \r\n                                value={this.state.end_date} onChange={this.onChange}/>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAddProject.propTypes={\r\n    createProject : PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    errors: state.errors\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createProject}\r\n    )(AddProject);","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\"\r\n\r\nconst initialState={\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function(state= initialState,action) {\r\n    switch(action.type){\r\n        case GET_BACKLOG:\r\n            return{\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n        case GET_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task => \r\n                    project_task.projectSequence !== action.payload\r\n                    )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_ERRORS} from \"../actions/types\"\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import  {DELETE_PROJECT, GET_PROJECT, GET_PROJECTS} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROJECTS:\r\n            return{\r\n                ...state,\r\n                projects:action.payload\r\n        }\r\n        case GET_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case DELETE_PROJECT:\r\n            return{\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    project => project.projectIdentifier !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_CURRENT_USER} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    validToken : false,\r\n    user: {}\r\n}\r\n\r\nconst booleanActionPayload = payload =>{\r\n    if(payload){\r\n        return true\r\n    }else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function(state= initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}","import {combineReducers} from \"redux\"\r\nimport backlogReducer from \"./backlogReducer\"\r\nimport errorReducer from \"./errorReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport securityReducer from \"./securityReducer\"\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n })","import {createStore,applyMiddleware,compose} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initalState ={}\r\nconst middleware =[thunk]\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initalState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        ))\r\n    \r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initalState,\r\n        compose(applyMiddleware(...middleware),\r\n        ))\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\"\r\nimport {getProject, createProject} from \"../../actions/projectActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\n\r\nclass UpdateProject extends Component {\r\n    //set state\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          id: \"\",\r\n          projectName: \"\",\r\n          projectIdentifier: \"\",\r\n          description: \"\",\r\n          start_date: \"\",\r\n          end_date: \"\",\r\n          errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n         } = nextProps.project\r\n         this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n         })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params\r\n        this.props.getProject(id, this.props.history)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const updateProject={\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors}=this.state;\r\n        return  (\r\n        <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">update Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.projectName\r\n                            })} \r\n                            placeholder=\"Project Name\" \r\n                            name=\"projectName\"\r\n                            value={this.state.projectName}\r\n                            onChange={this.onChange}/>\r\n                            {\r\n                                errors.projectName && (\r\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className=\"form-control form-control-lg\" \r\n                            placeholder=\"Unique Project ID\"\r\n                            name=\"projectIdentifier\"\r\n                            value={this.state.projectIdentifier}\r\n                            onChange={this.onChange}\r\n                            disabled />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": errors.description\r\n                              })} \r\n                            placeholder=\"Project Description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}></textarea>\r\n                            {errors.description && (\r\n                                <div className=\"invalid-feedback\">{errors.description}</div>\r\n                              )}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"start_date\" \r\n                            value={this.state.start_date}\r\n                            onChange={this.onChange}/>\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"end_date\" \r\n                            value={this.state.end_date}\r\n                            onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project:state.project.project,\r\n    errors: state.errors\r\n})\r\nexport default connect(\r\n    mapStateToProps,{getProject, createProject})(UpdateProject) \r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_id){\r\n        this.props.deleteProjectTask(backlog_id,pt_id)\r\n    }\r\n    render() {\r\n        const {project_task} = this.props\r\n        let priorityString\r\n        let priorityClass\r\n\r\n        if(project_task.priority===1){\r\n            priorityClass=\"bg-danger text-light\"\r\n            priorityString= \"HIGH\"\r\n        }\r\n\r\n        if(project_task.priority===2){\r\n            priorityClass=\"bg-warning text-light\"\r\n            priorityString= \"MEDIUM\"\r\n        }\r\n\r\n        if(project_task.priority===3){\r\n            priorityClass=\"bg-info text-light\"\r\n            priorityString= \"LOW\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                ID: {project_task.projectSequence} -- Priority:{priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">project_task.summary</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n                        project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                        View / Update\r\n                    </Link>\r\n\r\n                    <button className=\"btn btn-danger ml-4\" \r\n                    onClick={this.onDeleteClick.bind(\r\n                        this,\r\n                        project_task.projectIdentifier,\r\n                        project_task.projectSequence)} >Delete</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default  connect(null,{deleteProjectTask})(ProjectTask)","import axios from \"axios\";\r\nimport backlogReducer from \"../reducers/backlogReducer\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\"\r\n\r\n\r\nexport const addProjectTask = (\r\n    backlog_id, project_task, history\r\n    )=> async dispatch =>{\r\n        try {\r\n            await axios.post(`https://pmtspring.herokuapp.com/api/backlog/${backlog_id}`,project_task)\r\n            history.push(`/projectBoard/${backlog_id}`)\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })  \r\n        } catch (err) {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n}\r\n\r\nexport const getBacklog = backlog_id =>async dispatch =>{\r\n    try {\r\n        const res = await axios.get(`https://pmtspring.herokuapp.com/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type:GET_BACKLOG,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch=>{\r\n    try {\r\n        const res=await axios.get(`https://pmtspring.herokuapp.com/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task,history)=>async dispatch=>{\r\n    try {\r\n        await axios.patch(`https://pmtspring.herokuapp.com/api/backlog/${backlog_id}/${pt_id}`,project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) =>async dispatch=>{\r\n    if(\r\n        window.confirm(\r\n            `You are deleting project task ${pt_id}, this action cannot be undone`\r\n            )){\r\n        await axios.delete(`https://pmtspring.herokuapp.com/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const {project_tasks_prop} = this.props\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ))\r\n\r\n    let todoItems = []\r\n    let inProgressItems = []\r\n    let doneItems = []\r\n\r\n    for(let i=0; i<tasks.length; i++){\r\n        //console.log(tasks[i])\r\n        if(tasks[i].props.project_task.status === \"TO_DO\"){\r\n            todoItems.push(tasks[i])\r\n        }\r\n\r\n        if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\r\n            inProgressItems.push(tasks[i])\r\n        }\r\n\r\n        if(tasks[i].props.project_task.status === \"DONE\"){\r\n            doneItems.push(tasks[i])\r\n        }\r\n        \r\n    }\r\n\r\n        return (\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-secondary text-white\">\r\n                                    <h3>TO DO</h3>\r\n                                </div>\r\n                            </div>\r\n                        {todoItems}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-primary text-white\">\r\n                                    <h3>In Progress</h3>\r\n                                </div>\r\n                            </div>\r\n                            {inProgressItems}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h3>Done</h3>\r\n                                </div>\r\n                            </div>\r\n                            {doneItems}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default Backlog\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport Backlog from './Backlog';\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport {getBacklog} from \"../../actions/backlogActions\"\r\n\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n    //constructor to handle error\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            errors:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params\r\n        this.props.getBacklog(id)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { id } = this.props.match.params\r\n        const {project_tasks} = this.props.backlog\r\n        const {errors} = this.state\r\n\r\n        let BoardContent\r\n        const boardAlgorithm =(errors,project_tasks) =>{\r\n\r\n            if(project_tasks.length <1){\r\n                if(errors.projectNotFound){\r\n                    return(\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                      {errors.projectNotFound}\r\n                    </div>\r\n                    )\r\n                } else if(errors.projectIdentifier){\r\n                    return(\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                    )\r\n                }else {\r\n                    return (\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    No Project Tasks on this board\r\n                    </div>)\r\n                }\r\n            } else{\r\n                return <Backlog project_tasks_prop={project_tasks} />\r\n            }\r\n        }\r\n\r\n        BoardContent=boardAlgorithm(errors, project_tasks)\r\n        return (\r\n            <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog:PropTypes.object.isRequired,\r\n    getBacklog:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps =state =>({\r\n    backlog:state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{getBacklog})(ProjectBoard);\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport {addProjectTask} from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        const {id} = this.props.match.params\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        }\r\n        this.onChange=this.onChange.bind(this)\r\n        this.onSubmit=this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors })\r\n        }\r\n\r\n    }\r\n    //onchange\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    //onsubmit\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newTask={\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        }\r\n        this.props.addProjectTask(this.state.projectIdentifier,\r\n            newTask, \r\n            this.props.history\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {errors}=this.state; \r\n        \r\n        return (\r\n        <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.summary})}\r\n                            name=\"summary\" \r\n                            placeholder=\"Project Task summary\" \r\n                            value={this.state.summary}\r\n                            onChange={this,\r\n                                this.onChange}\r\n                            />\r\n                            {\r\n                                errors.summary && (\r\n                                    <div className=\"invalid-feedback\">{errors.summary}</div> \r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" \r\n                            placeholder=\"Acceptance Criteria\" \r\n                            name=\"acceptanceCriteria\"\r\n                            value={this.state.acceptanceCriteria}\r\n                            onChange={this,\r\n                                this.onChange}></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" \r\n                            name=\"dueDate\" \r\n                            value={this.state.dueDate}\r\n                            onChange={this,this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"priority\" \r\n                            value={this.state.priority}\r\n                            onChange={this,this.onChange} >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this,this.onChange} >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    {addProjectTask\r\n    })(AddProjectTask)","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: null,\r\n            projectIdentifier: \"\",\r\n            create_At: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange=this.onChange.bind(this)\r\n        this.onSubmit=this.onSubmit.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {backlog_id, pt_id}=this.props.match.params\r\n        this.props.getProjectTask(backlog_id,pt_id,this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors })\r\n        }\r\n        const{\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        }=nextProps.project_task\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        })\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const UpdateProjectTask={\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            create_At: this.state.create_At\r\n        }\r\n        //console.log(UpdateProjectTask)\r\n        this.props.updateProjectTask(\r\n            this.state.projectIdentifier,\r\n            this.state.projectSequence,\r\n            UpdateProjectTask,\r\n            this.props.history\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const {errors}= this.state\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name:{this.state.projectIdentifier} | \r\n                    Project Task ID: {\" \"}{this.state.projectSequence}</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", \r\n                            {\"is-invalid\":errors.summary})}\r\n                            name=\"summary\" \r\n                            placeholder=\"Project Task summary\"\r\n                            value={this.state.summary}\r\n                            onChange={this.onChange}\r\n                             />\r\n                             {\r\n                                 errors.summary && (\r\n                                     <div className=\"invalid-feedback\">\r\n                                     {errors.summary}\r\n                                     </div>\r\n                                 )\r\n                             }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" \r\n                            placeholder=\"Acceptance Criteria\" \r\n                            name=\"acceptanceCriteria\"\r\n                            value={this.state.acceptanceCriteria}\r\n                            onChange={this.onChange}></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"dueDate\" \r\n                            value={this.state.dueDate}\r\n                            onChange={this.onChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"priority\"\r\n                            value={this.state.priority}\r\n                            onChange={this.onChange}>\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}>\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProjectTask, updateProjectTask})(UpdateProjectTask)","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to join active projects or start your own\r\n                        </p>\r\n                        <hr />\r\n                        <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                                Sign Up\r\n                            </Link>\r\n                        <Link  className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst MapStateToProps = state => ({\r\n    security: state.security\r\n\r\n})\r\n\r\nexport default connect(MapStateToProps)(Landing)","import React, { Component } from 'react'\r\nimport { createNewUser } from \"../../actions/securityActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username:\"\",\r\n            fullName:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            errors: {}\r\n        }\r\n        this.onChange=this.onChange.bind(this)\r\n        this.onSubmit=this.onSubmit.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const newUser = {\r\n            username:this.state.username,\r\n            fullName:this.state.fullName,\r\n            password:this.state.password,\r\n            confirmPassword:this.state.confirmPassword,\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state\r\n        return (\r\n            <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                    <p className=\"lead text-center\">Create your Account</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.fullName\r\n                            })} \r\n                            placeholder=\"Full Name\" \r\n                            name=\"fullName\"\r\n                            value={this.state.fullName} \r\n                            onChange={this.onChange} />\r\n                            {\r\n                                errors.fullName && (\r\n                                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.username\r\n                            })} \r\n                            placeholder=\"Email Address(Username)\" \r\n                            name=\"username\"\r\n                            value={this.state.username} \r\n                            onChange={this.onChange}/>\r\n                        {\r\n                            errors.username && (\r\n                                <div className=\"invalid-feedback\">{errors.username}</div>\r\n                            )\r\n                        }\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.password\r\n                            })} \r\n                            placeholder=\"Password\" \r\n                            name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.onChange}/>\r\n                            {\r\n                                errors.password && (\r\n                                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.confirmPassword\r\n                            })} \r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"confirmPassword\"\r\n                            value={this.state.confirmPassword} \r\n                            onChange={this.onChange}/>\r\n                            {\r\n                                errors.confirmPassword && (\r\n                                    <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <input type=\"submit\" \r\n                        className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createNewUser}\r\n    )(Register)","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { login } from \"../../actions/securityActions\"\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange=this.onChange.bind(this)\r\n        this.onSubmit=this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n    }\r\n\r\n    if(nextProps.errors){\r\n        this.setState({errors:nextProps.errors})\r\n    }\r\n}\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const LoginRequest = {\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        }\r\n\r\n        this.props.login(LoginRequest)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {errors}=this.state\r\n        \r\n        return (\r\n            <div className=\"login\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Log In</h1>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                            type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\" , {\r\n                                \"is-invalid\": errors.username})}\r\n                            placeholder=\"Email Address\" \r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChange} />\r\n                            {\r\n                                errors.username && (\r\n                                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                            type=\"password\" \r\n                            className={classnames(\"form-control form-control-lg\" , {\r\n                                \"is-invalid\": errors.password})} \r\n                            placeholder=\"Password\" \r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChange} />\r\n                            {\r\n                                errors.password && (\r\n                                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <input type=\"submit\" \r\n                        className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        )\r\n    }\r\n}\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login }\r\n    )(Login)","import React, { Component } from 'react'\r\nimport {Route, Redirect} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst SecuredRoute = ({component: Component, security, ...otherProps}) => (\r\n    <Route {...otherProps} render= {\r\n        props => \r\n        security.validToken ===true?(\r\n            <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n    } />\r\n)\r\n\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n    )(SecuredRoute)","import './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport React, { Component } from \"react\";\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\"\nimport setJWTToken from \"./securityUtils/setJWTToken\"\nimport { SET_CURRENT_USER } from \"./actions/types\"\nimport {logout} from \"./actions/securityActions\"\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken\n\nif(jwtToken){\n  setJWTToken(jwtToken)\n  const decoded_jwtToken = jwt_decode(jwtToken)\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n})\n\nconst currentTime = Date.now()/1000\nif(decoded_jwtToken.exp<currentTime){\n  //handle logout\n  //window.location.href=\"/\"\n  store.dispatch(logout())\n  window.location.href = \"/\"\n}\n\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //public route\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private route\n            }\n            <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n            </Switch>\n            </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}